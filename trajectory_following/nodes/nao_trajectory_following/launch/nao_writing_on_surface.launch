<launch>
    <arg name="nao_handedness" default="right" />
    <arg name="nao_ip" default="127.0.0.1" />

    <!-- Topic to receive trajectories for nao to write on -->
    <arg name="trajectory_nao_input_topic" default="write_traj_downsampled" />
      
    <!-- Topic to receive trajectories to display on -->
    <arg name="trajectory_visualization_input_topic" default="write_traj" /> 
    
    <!-- Topic to publish trajectory display markers on -->
    <arg name="trajectory_visualization_output_topic" default="visualization_markers" /> 

    <!-- Topic to receive clear writing surface requests on -->
    <arg name="clear_writing_surface_topic" default="clear_screen" /> 
      
    <!-- Name of frame representing writing surface origin (at bottom left of surface, with x to the left and y up) -->
    <arg name="writing_surface_frame_id" default="writing_surface" /> 
    
    <!-- Method for positioning the writing surface. 'interactive_marker' for manual positioning in RViz, 'fiducial_marker_detection' for detecting a fiducial marker at the bottom left of the surface (tested with chilitags) -->
    <arg name="writing_surface_positioning_method" default="interactive_marker" />
    
    <!-- Name of frame of fiducial marker if used as positioning mode -->
    <arg name="fiducial_marker_frame_id" default="tag_1" />
    
    <!-- If chilitags is used as the fiducial marker detection scheme, the coordinate system of the detected tag has x up, y to the right. In future versions this may change, but for now it's necessary to rotate the frame, so the default is 'true.' If 'false' and no other processing is necessary, probably the frame can just be re-mapped and this node is unnecessary. -->
    <arg name="rotate_detected_tag_frame" default="true" />
    
    <!-- Size of rectangular marker to be displayed (default values for the galaxy note 10.1 in landscape orientation, use (0.21,0.297) for A4 paper in portrait orientation) -->
    <arg name="writing_surface_width_m" default="0.217" /> 
    <arg name="writing_surface_height_m" default="0.136" />
        
        
        
    <!-- ##### END ARGUMENTS ##### -->    
        
    <!-- Start RViz for display purposes -->
    <node pkg="rviz" type="rviz" name="rviz" args="--display-config=$(find nao_trajectory_following)/config/nao_writing_rviz_config.rviz" />
    
    <!-- Start the nao-related ROS nodes -->
    <include file="$(find nao_description)/launch/nao_v4_publisher.launch" />
    <node pkg="nao_driver" type="nao_sensors.py" name="nao_sensors" required="true" args="--pip=$(arg nao_ip) --pport=9559" />

    <!-- Connect the robot to the map -->
    <node pkg="tf" type="static_transform_publisher" name="map_footprint_broadcaster" args="0 0 0 0 0 0 /base_footprint /map 10"/>
    
    <!-- Start the robot's trajectory responder (which will make the robot move) -->
    <node pkg="nao_trajectory_following" type="nao_writer_naoqi.py" name="nao_writer">
        <param name="nao_handedness" type="str" value="$(arg nao_handedness)"/>
        <param name="trajectory_input_topic" type="str" value="$(arg trajectory_nao_input_topic)"/>
        <param name="nao_ip" type="str" value="$(arg nao_ip)"/>
    </node>
    
    <!-- Start the writing surface positioner to publish the TF and display it for RViz -->
    <node pkg="nao_trajectory_following" type="writing_surface_positioner.py" name="writing_surface_positioner">
        <param name="nao_handedness" type="str" value="$(arg nao_handedness)"/>
        <param name="positioning_method" type="str" value="$(arg writing_surface_positioning_method)"/>
        <param name="writing_surface_frame_id" type="str" value="$(arg writing_surface_frame_id)"/>
        <param name="tag_frame_id" type="str" value="$(arg fiducial_marker_frame_id)"/>
        <param name="surface_width" type="double" value="$(arg writing_surface_width_m)"/>
        <param name="surface_height" type="double" value="$(arg writing_surface_height_m)"/>
    </node>

    <!-- Start the trajectory visualization for RViz -->
    <node pkg="nao_trajectory_following" type="trajectory_visualizer.py" name="trajectory_visualizer">
        <param name="writing_surface_frame_id" type="str" value="$(arg writing_surface_frame_id)"/>
        <param name="trajectory_input_topic" type="str" value="$(arg trajectory_visualization_input_topic)"/>
        <param name="visualization_output_topic" type="str" value="$(arg trajectory_visualization_output_topic)"/>
        <param name="clear_surface_topic" type="str" value="$(arg clear_writing_surface_topic)"/>
    </node>
</launch>
